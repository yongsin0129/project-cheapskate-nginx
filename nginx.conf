events {}
http {
  # 設定 DNS 解析器
  resolver 8.8.8.8;

  server {
    # 監聽 HTTP 請求的埠口
    listen 80;

    # 伺服器名稱
    # server_name cheapskate-nginx.fly.dev
    server_name localhost;

    location /movie {
      # 允許跨源資源共享
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

      # 如果是 OPTIONS 請求，返回 HTTP 狀態碼 204
      if ($request_method = 'OPTIONS') {
        return 204;
      }

      # 如果查詢參數 target_movieID 不匹配指定的正則表達式，返回 HTTP 狀態碼 403
      if ($arg_target_movieID !~ "^[a-zA-Z0-9]+") {
        return 406;
      }
      
      # 設置目標 movieID，然後將 HTTP 請求代理到目標 movieID
      set $target_url "http://www.atmovies.com.tw/movie/$arg_target_movieID";
      proxy_pass $target_url;

      # 如果返回 301 302 等狀態碼，則重新代理轉跳的目標 URL
      proxy_intercept_errors on;
      error_page 301 302 = @try_another_url;
    }

          
    # 定義重新代理的目標 URL
    location @try_another_url {
      # 允許跨源資源共享
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

      # 如果是 OPTIONS 請求，返回 HTTP 狀態碼 204
      if ($request_method = 'OPTIONS') {
        return 204;
      }

      # 獲取重新導向的 URL
      set $redirect_url $upstream_http_location;
      
      # 設定代理目標 URL 為新的 URL
      proxy_pass $redirect_url;
    }

    # 代理的目標 URL
    location /proxy {
      # 允許跨源資源共享
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

      # 使用正則表達式檢查代理目標為否為 atmovies.com.tw
      if ($arg_url !~* "^.*atmovies\.com\.tw.*$") {
          return 406;
      }

      # 設置目標 movieID，然後將 HTTP 請求代理到目標 movieID
      set $target_url $arg_url;
      proxy_pass $target_url;
    }

    # 停用對 favicon.ico 的請求
    location = /favicon.ico {
    log_not_found off;
    access_log off;
    }
  }
}